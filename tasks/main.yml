---
# tasks/main.yml file for ansible-nifi
- name: include ./base/{{ ansible_os_family }}.yml
  include_tasks: ./base/{{ ansible_os_family }}.yml
  tags: [always]

- name: create /etc/hosts
  template:
    src: templates/hosts.j2
    dest: /etc/hosts
    mode: 0644
    unsafe_writes: "{{ ansible_virtualization_type == 'docker' }}"
  when: create_etc_hosts | default("yes", true) | bool
  tags: [always]

- name: set nofile ulimit to {{ pam_limits_nofile }}
  pam_limits:
    domain: '*'
    limit_type: "{{ item }}"
    limit_item: nofile
    value: "{{ pam_limits_nofile }}"
    use_max: yes
  with_items:
    - hard
    - soft
  tags: [always]

- name: set nproc ulimit to {{ pam_limits_nproc }}
  pam_limits:
    domain: '*'
    limit_type: "{{ item }}"
    limit_item: nproc
    value: "{{ pam_limits_nproc }}"
    use_max: yes
  with_items:
    - hard
    - soft
  tags: [always]

- name: set net.ipv4.ip_local_port_range={{ net_ipv4_ip_local_port_range }}
  sysctl:
    name: net.ipv4.ip_local_port_range
    value: "{{ net_ipv4_ip_local_port_range }}"
    sysctl_set: yes
    state: present
    reload: yes
  when: ansible_virtualization_type != "docker"
  tags: [always]

- name: set vm.swapiness={{ vm_swapiness }}
  lineinfile:
    dest: /etc/sysctl.conf
    regexp: '^vm.swapiness='
    line: vm.swapiness={{ vm_swapiness }}
  tags: [always]

- name: include ./nifi/common.yml
  include_tasks: ./nifi/common.yml

- name: set nifi_cluster
  set_fact:
    nifi_cluster: nifi_cluster | default("no", true) | bool
    cacheable: yes

- name: include ./nifi/{{ nifi_cluster | bool | ternary("cluster", "standalone") }}.yml
  include_tasks: ./nifi/{{ nifi_cluster | bool | ternary("cluster", "standalone") }}.yml

- name: set zookeeper_install
  set_fact:
    zookeeper_install: "{{ (nifi_cluster|bool) | ternary((zookeeper_install | default ('embedded', true)), (zookeeper_install | default ('none', true))) }}"
    cacheable: yes
  tags: [zookeeper]

- name: include ./zookeeper/{{ zookeeper_install }}.yml
  include_tasks: ./zookeeper/{{ zookeeper_install }}.yml
  when: nifi_cluster|bool or zookeeper_install == "local"
  tags: [zookeeper]

# Just be opinionated until bringing systemd back in.
- name: include ./init/supervisord.yml
  include_tasks: ./init/supervisord.yml
  tags: [zookeeper]

- name: check whether nifi started successfully
  block:
    - name: check whether the UI is available in ./logs/nifi-app.log
      wait_for:
        timeout: 300
        path: "{{ nifi_home }}/logs/nifi-app.log"
        search_regex: 'JettyServer NiFi has started\. The UI is available at the following URLs'
      ignore_errors: yes
    - name: check whether a port is open at :{{ nifi_web_http_port }}
      wait_for:
        port: "{{ nifi_web_http_port }}"
        host: "{{ ansible_hostname }}"
      ignore_errors: yes
